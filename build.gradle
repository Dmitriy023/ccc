buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id "org.sonarqube" version "2.7"
    id 'jacoco'
    id 'checkstyle'
}

checkstyle {
    toolVersion = '8.15'
    configFile = file("${rootProject.projectDir}/checkstyle/checkstyle.xml")
    ignoreFailures = false
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled true
        html.enabled true
    }
}

group = 'az.iba.ms.card'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {

    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    compileOnly {
        extendsFrom annotationProcessor
    }
}

apply plugin: 'docker'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'junit:junit:4.13'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'com.google.guava:guava:30.0-jre'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'org.hibernate:hibernate-validator:6.1.6.Final'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.7'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("build/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}

sonarqube {
    properties {
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.jacoco.reportPath", "build/jacoco/test.exec"
        property "sonar.junit.reportsPath", "build/test-results/test"
        property "sonar.projectKey", rootProject.name
        property "sonar.host.url", "https://sonarqube.ibar.az"
        property "sonar.scm.forceReloadAll", "true"
        property "sonar.java.checkstyle.reportPaths", "build/reports/checkstyle/main.xml"
    }
}

bootJar {
    archiveName 'app.jar'
}